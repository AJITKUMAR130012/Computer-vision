# -*- coding: utf-8 -*-
"""Computer_vision_Assignment1_7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Scl81aLbPmyjCFE6sQVMoCxT9ZIbU6uO
"""

!git clone https://github.com/AJITKUMAR130012/Computer-vision.git

cd Computer-vision

!ls

cd Assignment1

"""# Black text white background"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

img = cv2.imread("./Dataset/7/27_2.png")
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

plt.imshow(gray)
plt.show()



#plt.imshow(binary)
canny=cv2.Canny(gray,200,255)

plt.imshow(canny)

# Find contours in the binary image
contours, hierarchy = cv2.findContours(canny, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

img=cv2.drawContours(img, contours, -1, (0, 255, 0), 1)

# Display the output
plt.imshow(img)
plt.show()

"""# White text black background"""

import cv2
# Load the image
img = cv2.imread("./Dataset/7/11_1.png")

# Convert the image to grayscale
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

plt.imshow(gray)
plt.show()

canny=cv2.Canny(gray,50,255)

#gray = cv2.bitwise_not(gray)

#plt.imshow(gray)

# Threshold the image to get binary image
#threshold, binary = cv2.threshold(gray, 50, 255, cv2.THRESH_BINARY_INV)

plt.imshow(canny)

#binary = cv2.bitwise_not(gray)

#plt.imshow(binary)

contours, _ = cv2.findContours(canny, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# print(contours)

# Draw the contours on the original image
img=cv2.drawContours(img, contours, -1, (0, 255, 0), 2)

# Save the result
plt.imshow(img)
plt.show()

